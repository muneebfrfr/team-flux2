// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "../src/generated/prisma"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id            String         @id @default(cuid()) @map("_id")
  name          String
  email         String         @unique
  passwordHash  String
  roles         String[]       @default([])
  sessions      Session[]      @relation("PresenterSessions")
  assignedItems ActionItem[]   @relation("AssignedItems")
  notifications Notification[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Session {
  id           String         @id @default(cuid()) @map("_id")
  topic        String
  description  String?
  presenter    Users          @relation("PresenterSessions", fields: [presenterId], references: [id])
  presenterId  String
  time         DateTime
  notes        Note[]
  actionItems  ActionItem[]
  feedbacks    Feedback[]
  calendarId   String? // For external calendar integration (e.g., Google Calendar event ID)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Notification Notification[]
}

model Note {
  id        String   @id @default(cuid()) @map("_id")
  content   String
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ActionItem {
  id           String    @id @default(cuid()) @map("_id")
  description  String
  session      Session   @relation(fields: [sessionId], references: [id])
  sessionId    String
  assignedTo   Users     @relation("AssignedItems", fields: [assignedToId], references: [id])
  assignedToId String
  completed    Boolean   @default(false)
  dueDate      DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Feedback {
  id        String   @id @default(cuid()) @map("_id")
  rating    Int // 1 to 5
  comment   String?
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId String
  createdAt DateTime @default(now())
}

model Notification {
  id        String   @id @default(cuid()) @map("_id")
  user      Users    @relation(fields: [userId], references: [id])
  userId    String
  message   String
  session   Session? @relation(fields: [sessionId], references: [id])
  sessionId String?
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
}
